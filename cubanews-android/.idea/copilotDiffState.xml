<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/acorn/cubanews/MainActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/acorn/cubanews/MainActivity.kt" />
              <option name="originalContent" value="package com.acorn.cubanews&#10;&#10;import android.os.Bundle&#10;import androidx.activity.ComponentActivity&#10;import androidx.activity.compose.setContent&#10;import androidx.activity.enableEdgeToEdge&#10;import androidx.compose.foundation.layout.fillMaxSize&#10;import androidx.compose.foundation.layout.padding&#10;import androidx.compose.material.icons.Icons&#10;import androidx.compose.material.icons.filled.Home&#10;import androidx.compose.material.icons.filled.Person&#10;import androidx.compose.material.icons.filled.Search&#10;import androidx.compose.material3.ExperimentalMaterial3Api&#10;import androidx.compose.material3.Icon&#10;import androidx.compose.material3.MaterialTheme&#10;import androidx.compose.material3.NavigationBar&#10;import androidx.compose.material3.NavigationBarItem&#10;import androidx.compose.material3.Scaffold&#10;import androidx.compose.material3.Surface&#10;import androidx.compose.material3.Text&#10;import androidx.compose.material3.TopAppBar&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.graphics.vector.ImageVector&#10;import androidx.compose.ui.tooling.preview.Preview&#10;import androidx.compose.ui.unit.dp&#10;import androidx.lifecycle.viewmodel.compose.viewModel&#10;import androidx.navigation.NavGraph.Companion.findStartDestination&#10;import androidx.navigation.compose.NavHost&#10;import androidx.navigation.compose.composable&#10;import androidx.navigation.compose.currentBackStackEntryAsState&#10;import androidx.navigation.compose.rememberNavController&#10;import com.acorn.cubanews.feed.FeedComposable&#10;import com.acorn.cubanews.feed.FeedViewModel&#10;import com.acorn.cubanews.ui.theme.CubanewsTheme&#10;&#10;class MainActivity : ComponentActivity() {&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        enableEdgeToEdge()&#10;        setContent {&#10;            CubanewsTheme {&#10;                Material3BottomNavApp()&#10;            }&#10;        }&#10;    }&#10;}&#10;&#10;sealed class Screen(val route: String, val icon: ImageVector, val label: String) {&#10;    object Home : Screen(&quot;home&quot;, Icons.Filled.Home, &quot;Home&quot;)&#10;    object Search : Screen(&quot;search&quot;, Icons.Filled.Search, &quot;Search&quot;)&#10;    object Profile : Screen(&quot;profile&quot;, Icons.Filled.Person, &quot;Profile&quot;)&#10;}&#10;&#10;val bottomNavItems = listOf(&#10;    Screen.Home,&#10;    Screen.Search,&#10;    Screen.Profile&#10;)&#10;&#10;@Preview&#10;@Composable&#10;fun Material3BottomNavAppPreview() {&#10;    Material3BottomNavApp()&#10;}&#10;&#10;@OptIn(ExperimentalMaterial3Api::class)&#10;@Composable&#10;fun Material3BottomNavApp() {&#10;    val navController = rememberNavController()&#10;    val currentDestination = navController&#10;        .currentBackStackEntryAsState().value?.destination&#10;&#10;    Scaffold(&#10;        topBar = {&#10;            TopAppBar(title = {&#10;                Text(currentDestination?.route?.uppercase() ?: &quot;Cubanews&quot;)&#10;            })&#10;        },&#10;        bottomBar = {&#10;            NavigationBar {&#10;                bottomNavItems.forEach { screen -&gt;&#10;                    val selected = currentDestination?.route == screen.route&#10;                    NavigationBarItem(&#10;                        selected = selected,&#10;                        onClick = {&#10;                            navController.navigate(screen.route) {&#10;                                popUpTo(navController.graph.findStartDestination().id) {&#10;                                    saveState = true&#10;                                }&#10;                                launchSingleTop = true&#10;                                restoreState = true&#10;                            }&#10;                        },&#10;                        icon = { Icon(screen.icon, contentDescription = screen.label) },&#10;                        label = { Text(screen.label) }&#10;                    )&#10;                }&#10;            }&#10;        }&#10;    ) { innerPadding -&gt;&#10;        NavHost(&#10;            navController = navController,&#10;            startDestination = Screen.Home.route,&#10;            modifier = Modifier.padding(innerPadding)&#10;        ) {&#10;            composable(Screen.Home.route) { HomeScreen() }&#10;            composable(Screen.Search.route) { SearchScreen() }&#10;            composable(Screen.Profile.route) { ProfileScreen() }&#10;        }&#10;    }&#10;}&#10;&#10;@Composable&#10;fun HomeScreen() {&#10;    Surface(modifier = Modifier.fillMaxSize()) {&#10;        FeedComposable(viewModel(FeedViewModel::class))&#10;    }&#10;}&#10;&#10;@Composable&#10;fun SearchScreen() {&#10;    Surface(modifier = Modifier.fillMaxSize()) {&#10;        CenteredText(&quot;Search something...&quot;)&#10;    }&#10;}&#10;&#10;@Composable&#10;fun ProfileScreen() {&#10;    Surface(modifier = Modifier.fillMaxSize()) {&#10;        CenteredText(&quot;This is your profile&quot;)&#10;    }&#10;}&#10;&#10;@Composable&#10;fun CenteredText(text: String) {&#10;    androidx.compose.foundation.layout.Box(&#10;        modifier = Modifier&#10;            .fillMaxSize()&#10;            .padding(16.dp),&#10;        contentAlignment = androidx.compose.ui.Alignment.Center&#10;    ) {&#10;        Text(text, style = MaterialTheme.typography.headlineSmall)&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.acorn.cubanews&#10;&#10;import android.os.Bundle&#10;import androidx.activity.ComponentActivity&#10;import androidx.activity.compose.setContent&#10;import androidx.activity.enableEdgeToEdge&#10;import androidx.compose.foundation.Image&#10;import androidx.compose.foundation.layout.*&#10;import androidx.compose.material.icons.Icons&#10;import androidx.compose.material.icons.filled.Home&#10;import androidx.compose.material.icons.filled.Person&#10;import androidx.compose.material.icons.filled.Search&#10;import androidx.compose.material3.ExperimentalMaterial3Api&#10;import androidx.compose.material3.Icon&#10;import androidx.compose.material3.MaterialTheme&#10;import androidx.compose.material3.NavigationBar&#10;import androidx.compose.material3.NavigationBarItem&#10;import androidx.compose.material3.Scaffold&#10;import androidx.compose.material3.Surface&#10;import androidx.compose.material3.Text&#10;import androidx.compose.material3.TopAppBar&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.graphics.vector.ImageVector&#10;import androidx.compose.ui.res.painterResource&#10;import androidx.compose.ui.tooling.preview.Preview&#10;import androidx.compose.ui.unit.dp&#10;import androidx.lifecycle.viewmodel.compose.viewModel&#10;import androidx.navigation.NavGraph.Companion.findStartDestination&#10;import androidx.navigation.compose.NavHost&#10;import androidx.navigation.compose.composable&#10;import androidx.navigation.compose.currentBackStackEntryAsState&#10;import androidx.navigation.compose.rememberNavController&#10;import com.acorn.cubanews.feed.FeedComposable&#10;import com.acorn.cubanews.feed.FeedViewModel&#10;import com.acorn.cubanews.ui.theme.CubanewsTheme&#10;import androidx.compose.foundation.shape.CircleShape&#10;&#10;class MainActivity : ComponentActivity() {&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        enableEdgeToEdge()&#10;        setContent {&#10;            CubanewsTheme {&#10;                Material3BottomNavApp()&#10;            }&#10;        }&#10;    }&#10;}&#10;&#10;sealed class Screen(val route: String, val icon: ImageVector, val label: String) {&#10;    object Home : Screen(&quot;home&quot;, Icons.Filled.Home, &quot;Home&quot;)&#10;    object Search : Screen(&quot;search&quot;, Icons.Filled.Search, &quot;Search&quot;)&#10;    object Profile : Screen(&quot;profile&quot;, Icons.Filled.Person, &quot;Profile&quot;)&#10;}&#10;&#10;val bottomNavItems = listOf(&#10;    Screen.Home,&#10;    Screen.Search,&#10;    Screen.Profile&#10;)&#10;&#10;@Preview&#10;@Composable&#10;fun Material3BottomNavAppPreview() {&#10;    Material3BottomNavApp()&#10;}&#10;&#10;@OptIn(ExperimentalMaterial3Api::class)&#10;@Composable&#10;fun Material3BottomNavApp() {&#10;    val navController = rememberNavController()&#10;    val currentDestination = navController&#10;        .currentBackStackEntryAsState().value?.destination&#10;&#10;    Scaffold(&#10;        topBar = {&#10;            TopAppBar(title = {&#10;                Row(verticalAlignment = Alignment.CenterVertically) {&#10;                    Image(&#10;                        painter = painterResource(id = R.drawable.cubanflag),&#10;                        contentDescription = &quot;Cuban flag&quot;,&#10;                        modifier = Modifier&#10;                            .padding(end = 8.dp)&#10;                            .size(32.dp)&#10;                            .clip(CircleShape)&#10;                    )&#10;                    Text(&quot;Cubanews&quot;, style = MaterialTheme.typography.titleLarge)&#10;                }&#10;            })&#10;        },&#10;        bottomBar = {&#10;            NavigationBar {&#10;                bottomNavItems.forEach { screen -&gt;&#10;                    val selected = currentDestination?.route == screen.route&#10;                    NavigationBarItem(&#10;                        selected = selected,&#10;                        onClick = {&#10;                            navController.navigate(screen.route) {&#10;                                popUpTo(navController.graph.findStartDestination().id) {&#10;                                    saveState = true&#10;                                }&#10;                                launchSingleTop = true&#10;                                restoreState = true&#10;                            }&#10;                        },&#10;                        icon = { Icon(screen.icon, contentDescription = screen.label) },&#10;                        label = { Text(screen.label) }&#10;                    )&#10;                }&#10;            }&#10;        }&#10;    ) { innerPadding -&gt;&#10;        NavHost(&#10;            navController = navController,&#10;            startDestination = Screen.Home.route,&#10;            modifier = Modifier.padding(innerPadding)&#10;        ) {&#10;            composable(Screen.Home.route) { HomeScreen() }&#10;            composable(Screen.Search.route) { SearchScreen() }&#10;            composable(Screen.Profile.route) { ProfileScreen() }&#10;        }&#10;    }&#10;}&#10;&#10;@Composable&#10;fun HomeScreen() {&#10;    Surface(modifier = Modifier.fillMaxSize()) {&#10;        FeedComposable(viewModel(FeedViewModel::class))&#10;    }&#10;}&#10;&#10;@Composable&#10;fun SearchScreen() {&#10;    Surface(modifier = Modifier.fillMaxSize()) {&#10;        CenteredText(&quot;Search something...&quot;)&#10;    }&#10;}&#10;&#10;@Composable&#10;fun ProfileScreen() {&#10;    Surface(modifier = Modifier.fillMaxSize()) {&#10;        CenteredText(&quot;This is your profile&quot;)&#10;    }&#10;}&#10;&#10;@Composable&#10;fun CenteredText(text: String) {&#10;    androidx.compose.foundation.layout.Box(&#10;        modifier = Modifier&#10;            .fillMaxSize()&#10;            .padding(16.dp),&#10;        contentAlignment = androidx.compose.ui.Alignment.Center&#10;    ) {&#10;        Text(text, style = MaterialTheme.typography.headlineSmall)&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>